<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>MillerJAM Site</title><link>http://millerjam.github.io/</link><description>Recent content on MillerJAM Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Mar 2022 17:06:12 -0500</lastBuildDate><atom:link href="http://millerjam.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust Lambda Hello World</title><link>http://millerjam.github.io/posts/rust-lambda-hello-world/</link><pubDate>Mon, 07 Mar 2022 17:06:12 -0500</pubDate><guid>http://millerjam.github.io/posts/rust-lambda-hello-world/</guid><description>Getting started with AWS Lambda Rust Runtime I just finished a quick tutorial to create a hello world lambda using the AWS Lambda Rust Runtime
Github repo for the tutorial If you&amp;rsquo;re in a rush&amp;hellip;
You can view the completed source code here: rust_lambda_hello_world
Overview I think that Rust is a great fit for serverless and I wanted to start documenting how to use Rust in a lambda. Lambdas are a great opportunity to test out a new language without making a huge commitment in terms of time or resources.</description></item><item><title>My First Post</title><link>http://millerjam.github.io/posts/my-first-post/</link><pubDate>Tue, 22 Feb 2022 11:09:05 -0500</pubDate><guid>http://millerjam.github.io/posts/my-first-post/</guid><description>I started learning Serverless with Rust.
Here is a quick tutorial I started creating, rust_lambda_hello_world. This is a simple &amp;ldquo;hello world&amp;rdquo; lambda that uses the AWS Lambda Rust Runtime. It walks through creating the new project, adding crates, and how to cross compile for Amazon Linux 2 on x86. Finally, create a new AWS lambda function and invoke using the cli.
It was fun to get this started and there are a lot of additional things I can add around testing, logging.</description></item></channel></rss>